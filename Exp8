#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generateKey(const char *keyword, char keyMap[26]) {
    int used[26] = {0};
    int index = 0;

    // Step 1: Fill key from keyword
    for (int i = 0; keyword[i]; i++) {
        char ch = toupper(keyword[i]);
        if (ch >= 'A' && ch <= 'Z' && !used[ch - 'A']) {
            keyMap[index++] = ch;
            used[ch - 'A'] = 1;
        }
    }

    // Step 2: Fill remaining letters
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (!used[ch - 'A']) {
            keyMap[index++] = ch;
        }
    }
}

void encryptMonoalpha(const char *plaintext, const char keyMap[26], char *ciphertext) {
    for (int i = 0; plaintext[i]; i++) {
        char ch = toupper(plaintext[i]);
        if (ch >= 'A' && ch <= 'Z')
            ciphertext[i] = keyMap[ch - 'A'];
        else
            ciphertext[i] = plaintext[i]; // keep non-letters as is
    }
    ciphertext[strlen(plaintext)] = '\0';
}

int main() {
    char keyword[] = "CIPHER";
    char plaintext[100], ciphertext[100], keyMap[26];

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0;

    generateKey(keyword, keyMap);
    encryptMonoalpha(plaintext, keyMap, ciphertext);

    printf("Encrypted text: %s\n", ciphertext);
    return 0;
}

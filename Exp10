#include <stdio.h>
#include <string.h>
#include <ctype.h>

char matrix[5][5] = {
    {'M','F','H','I','K'},
    {'U','N','O','P','Q'},
    {'Z','V','W','X','Y'},
    {'E','L','A','R','G'},
    {'D','S','T','B','C'}
};

void findPosition(char ch, int *row, int *col) {
    if (ch == 'J') ch = 'I';
    for (int i = 0; i < 5; i++)
        for (int j = 0; j < 5; j++)
            if (matrix[i][j] == ch) {
                *row = i; *col = j;
                return;
            }
}

void prepareText(char *input, char *output) {
    int len = 0;
    for (int i = 0; input[i]; i++) {
        if (isalpha(input[i])) {
            output[len++] = toupper(input[i] == 'J' ? 'I' : input[i]);
        }
    }
    output[len] = '\0';

    // Insert filler X if duplicate pair
    for (int i = 0; i < len; i += 2) {
        if (output[i] == output[i+1]) {
            for (int j = len; j > i+1; j--)
                output[j] = output[j-1];
            output[i+1] = 'X';
            len++;
        }
    }
    if (len % 2 != 0) {
        output[len++] = 'X';
    }
    output[len] = '\0';
}

void encryptPlayfair(const char *text) {
    for (int i = 0; i < strlen(text); i += 2) {
        char a = text[i];
        char b = text[i+1];
        int r1, c1, r2, c2;
        findPosition(a, &r1, &c1);
        findPosition(b, &r2, &c2);

        if (r1 == r2)
            printf("%c%c", matrix[r1][(c1+1)%5], matrix[r2][(c2+1)%5]);
        else if (c1 == c2)
            printf("%c%c", matrix[(r1+1)%5][c1], matrix[(r2+1)%5][c2]);
        else
            printf("%c%c", matrix[r1][c2], matrix[r2][c1]);
    }
    printf("\n");
}

int main() {
    char input[] = "Must see you over Cadogan West. Coming at once.";
    char prepared[200];

    prepareText(input, prepared);
    printf("Encrypted Playfair Text:\n");
    encryptPlayfair(prepared);
    return 0;
}
